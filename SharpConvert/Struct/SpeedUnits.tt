<#@ template language="C#" hostspecific="True"#>
<#@ output extension="g.cs" #>
<#@ include file="Magnitude.ttinclude"#><##>
<#@ include file="Conversion.ttinclude"#><##>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
using System;

namespace MmiSoft.Core.Math.Units.Struct;

<#
    List<UnitDecl> lengthUnits = ParseUnits(Host.ResolvePath("length-units.txt"));
    List<UnitDecl> timeUnits = ParseUnits(Host.ResolvePath("time-units.txt"));
    string absolutePath = Host.ResolvePath("speed-units.txt");
    string[] units = File.ReadAllLines(absolutePath);
    List<UnitDecl> declaredUnits = new(units.Length);
    declaredUnits.AddRange(units.Select(t => UnitDecl.DerivedFromText(t, lengthUnits, timeUnits)));
    
    List<string> otherUnits = declaredUnits.Select(u => u.StructName).ToList();
    for (int i = 0; i < declaredUnits.Count; i++)
    {
        UnitDecl declaredUnit = declaredUnits[i];
        otherUnits.RemoveAt(i);
        GenerateClassForMagnitude(declaredUnit, false, "Speed", otherUnits);
        otherUnits.Insert(i, declaredUnit.StructName);
    }
#>
